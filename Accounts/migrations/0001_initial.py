# Generated by Django 4.0.6 on 2022-08-28 15:23

import autoslug.fields
from django.db import migrations, models
import django_countries.fields
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_name', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('is_recruiter', models.BooleanField(default=False)),
                ('is_candidate', models.BooleanField(default=False)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('location', models.CharField(choices=[('New York', 'New York'), ('London', 'London'), ('Los Angeles', 'Los Angeles'), ('San Francisco', 'San Francisco'), ('Seattle', 'Seattle'), ('Chicago', 'Chicago'), ('Remote', 'Remote'), ('Other', 'Other')], max_length=50)),
                ('location_other', models.CharField(blank=True, max_length=50, null=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes')),
                ('tech_lang', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Java', 'Java'), ('C++', 'C++'), ('Python', 'Python'), ('Other', 'Other')], max_length=21, null=True)),
                ('tech_cloud', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('AWS', 'AWS'), ('GCP', 'GCP'), ('Azure', 'Azure'), ('Other', 'Other')], max_length=19, null=True)),
                ('property_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Multifamily', 'Multifamily'), ('Retail', 'Retail'), ('Office', 'Office'), ('Industrial', 'Industrial'), ('Hotel', 'Hotel'), ('Other', 'Other')], max_length=48, null=True)),
                ('role_sought', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('C Suite', 'C Suite'), ('Sales Exec', 'Sales Exec'), ('Sales Entry', 'Sales Entry'), ('Sales Mid-level', 'Sales Mid-level'), ('Front End Engineer', 'Front End Engineer'), ('UX Designer', 'UX Designer'), ('Data Engineerg', 'Data Engineerg'), ('Data Science', 'Data Science'), ('Product Management', 'Product Management'), ('Engineering', 'Engineering'), ('Other', 'Other')], max_length=142, null=True)),
                ('desired_salary_range', models.CharField(blank=True, choices=[('$50k - $75k', '$50k - $75k'), ('$75k - $100k', '$75k - $100k'), ('$100k - $125k', '$100k - $125k'), ('$125k - $175k', '$125k - $175k'), ('$175k - $200k', '$175k - $200k'), ('$200k+', '$200k+'), ('Commision-based', 'Commision-based')], max_length=100, null=True)),
                ('remote_capable', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100, null=True)),
                ('desired_time', models.CharField(blank=True, choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time'), ('Temporary', 'Temporary'), ('Remote', 'Remote')], max_length=100, null=True)),
                ('funding_stage', models.CharField(blank=True, choices=[('Seed Round', 'Seed Round'), ('Post Seed', 'Post Seed'), ('A Round', 'A Round'), ('B Round', 'B Round'), ('C Round ', 'C Round '), ('Late Stage (post C)', 'Late Stage (post C)'), ('Public', 'Public')], max_length=100, null=True)),
                ('funding_amount', models.CharField(blank=True, choices=[('<$1M', '<$1M'), ('$1m - $2m', '$1m - $2m'), ('$2m - $5m', '$2m - $5m'), ('$5m - $10m', '$5m - $10m'), ('$10m - $20m', '$10m - $20m'), ('$20m - $50m', '$20m - $50m'), ('$50m+', '$50m+')], max_length=100, null=True)),
                ('proptech_experience', models.IntegerField(blank=True, default=0, null=True)),
                ('field_experience', models.IntegerField(blank=True, default=0, null=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='email', unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
